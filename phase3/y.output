Grammar

    0 $accept: program $end

    1 program: %empty
    2        | program function

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    4 declaration: identifier COMMA declaration
    5            | identifier COLON INTEGER
    6            | identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    7 number: NUMBER

    8 decline: %empty
    9        | declaration SEMICOLON decline

   10 declparam: %empty
   11          | declarationparam SEMICOLON declparam

   12 declarationparam: identifier COMMA declarationparam
   13                 | identifier COLON INTEGER
   14                 | identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

   15 identifier: IDENT

   16 statement: var ASSIGN expression
   17          | IF boolexp THEN statline stathelp ENDIF
   18          | WHILE boolexp BEGINLOOP statline ENDLOOP
   19          | DO BEGINLOOP statline ENDLOOP WHILE boolexp
   20          | FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP
   21          | READ varline
   22          | WRITE varline
   23          | CONTINUE
   24          | RETURN expression

   25 stathelp: %empty
   26         | ELSE statline

   27 varline: var
   28        | var COMMA varline

   29 statline: %empty
   30         | statement SEMICOLON statline

   31 boolexp: relationandexpr
   32        | relationandexpr OR boolexp

   33 relationandexpr: relationexpr
   34                | relationexpr AND relationandexpr

   35 relationexpr: NOT relationhelper
   36             | relationhelper

   37 relationhelper: expression comp expression
   38               | TRUE
   39               | FALSE
   40               | L_PAREN boolexp R_PAREN

   41 comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | LTE
   46     | GTE

   47 expression: multiplicativeexp
   48           | expression ADD multiplicativeexp
   49           | expression SUB multiplicativeexp

   50 multiplicativeexp: term
   51                  | multiplicativeexp MULT term
   52                  | multiplicativeexp DIV term
   53                  | multiplicativeexp MOD term

   54 term: term1
   55     | SUB term1
   56     | identifier L_PAREN expresscomm R_PAREN

   57 term1: var
   58      | number
   59      | L_PAREN expression R_PAREN

   60 var: identifier
   61    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   62 expresscomm: expression
   63            | expression COMMA expresscomm


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 5 6 13 14
SEMICOLON (266) 3 9 11 20 30
COMMA (267) 4 12 28 63
COLON (268) 5 6 13 14
L_SQUARE_BRACKET (269) 6 14 61
R_SQUARE_BRACKET (270) 6 14 61
ARRAY (271) 6 14
OF (272) 6 14
ASSIGN (273) 16 20
IF (274) 17
THEN (275) 17
ELSE (276) 26
ENDIF (277) 17
WHILE (278) 18 19
BEGINLOOP (279) 18 19 20
ENDLOOP (280) 18 19 20
READ (281) 21
WRITE (282) 22
CONTINUE (283) 23
RETURN (284) 24
DO (285) 19
FOR (286) 20
OR (287) 32
AND (288) 34
NOT (289) 35
TRUE (290) 38
FALSE (291) 39
L_PAREN (292) 40 56 59
R_PAREN (293) 40 56 59
IDENT (294) 15
NUMBER (295) 7
ADD (296) 48
SUB (297) 49 55
MULT (298) 51
DIV (299) 52
MOD (300) 53
LTE (301) 45
GT (302) 44
LT (303) 43
GTE (304) 46
EQ (305) 41
NEQ (306) 42


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3, on right: 2
declaration (55)
    on left: 4 5 6, on right: 4 9
number (56)
    on left: 7, on right: 6 14 20 58
decline (57)
    on left: 8 9, on right: 3 9
declparam (58)
    on left: 10 11, on right: 3 11
declarationparam (59)
    on left: 12 13 14, on right: 11 12
identifier (60)
    on left: 15, on right: 3 4 5 6 12 13 14 56 60 61
statement (61)
    on left: 16 17 18 19 20 21 22 23 24, on right: 30
stathelp (62)
    on left: 25 26, on right: 17
varline (63)
    on left: 27 28, on right: 21 22 28
statline (64)
    on left: 29 30, on right: 3 17 18 19 20 26 30
boolexp (65)
    on left: 31 32, on right: 17 18 19 20 32 40
relationandexpr (66)
    on left: 33 34, on right: 31 32 34
relationexpr (67)
    on left: 35 36, on right: 33 34
relationhelper (68)
    on left: 37 38 39 40, on right: 35 36
comp (69)
    on left: 41 42 43 44 45 46, on right: 37
expression (70)
    on left: 47 48 49, on right: 16 20 24 37 48 49 59 61 62 63
multiplicativeexp (71)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
term (72)
    on left: 54 55 56, on right: 50 51 52 53
term1 (73)
    on left: 57 58 59, on right: 54 55
var (74)
    on left: 60 61, on right: 16 20 27 28 57
expresscomm (75)
    on left: 62 63, on right: 56 63


State 0

    0 $accept: . program $end

    $default  reduce using rule 1 (program)

    program  go to state 1


State 1

    0 $accept: program . $end
    2 program: program . function

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    function  go to state 4


State 2

    0 $accept: program $end .

    $default  accept


State 3

    3 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 4

    2 program: program function .

    $default  reduce using rule 2 (program)


State 5

   15 identifier: IDENT .

    $default  reduce using rule 15 (identifier)


State 6

    3 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    SEMICOLON  shift, and go to state 7


State 7

    3 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    BEGIN_PARAMS  shift, and go to state 8


State 8

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (declparam)

    declparam         go to state 9
    declarationparam  go to state 10
    identifier        go to state 11


State 9

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam . END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    END_PARAMS  shift, and go to state 12


State 10

   11 declparam: declarationparam . SEMICOLON declparam

    SEMICOLON  shift, and go to state 13


State 11

   12 declarationparam: identifier . COMMA declarationparam
   13                 | identifier . COLON INTEGER
   14                 | identifier . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 14
    COLON  shift, and go to state 15


State 12

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS . BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    BEGIN_LOCALS  shift, and go to state 16


State 13

   11 declparam: declarationparam SEMICOLON . declparam

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (declparam)

    declparam         go to state 17
    declarationparam  go to state 10
    identifier        go to state 11


State 14

   12 declarationparam: identifier COMMA . declarationparam

    IDENT  shift, and go to state 5

    declarationparam  go to state 18
    identifier        go to state 11


State 15

   13 declarationparam: identifier COLON . INTEGER
   14                 | identifier COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 16

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS . decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (decline)

    declaration  go to state 21
    decline      go to state 22
    identifier   go to state 23


State 17

   11 declparam: declarationparam SEMICOLON declparam .

    $default  reduce using rule 11 (declparam)


State 18

   12 declarationparam: identifier COMMA declarationparam .

    $default  reduce using rule 12 (declarationparam)


State 19

   13 declarationparam: identifier COLON INTEGER .

    $default  reduce using rule 13 (declarationparam)


State 20

   14 declarationparam: identifier COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 21

    9 decline: declaration . SEMICOLON decline

    SEMICOLON  shift, and go to state 25


State 22

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline . END_LOCALS BEGIN_BODY statline END_BODY

    END_LOCALS  shift, and go to state 26


State 23

    4 declaration: identifier . COMMA declaration
    5            | identifier . COLON INTEGER
    6            | identifier . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 27
    COLON  shift, and go to state 28


State 24

   14 declarationparam: identifier COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 30


State 25

    9 decline: declaration SEMICOLON . decline

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (decline)

    declaration  go to state 21
    decline      go to state 31
    identifier   go to state 23


State 26

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS . BEGIN_BODY statline END_BODY

    BEGIN_BODY  shift, and go to state 32


State 27

    4 declaration: identifier COMMA . declaration

    IDENT  shift, and go to state 5

    declaration  go to state 33
    identifier   go to state 23


State 28

    5 declaration: identifier COLON . INTEGER
    6            | identifier COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 34
    ARRAY    shift, and go to state 35


State 29

    7 number: NUMBER .

    $default  reduce using rule 7 (number)


State 30

   14 declarationparam: identifier COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 36


State 31

    9 decline: declaration SEMICOLON decline .

    $default  reduce using rule 9 (decline)


State 32

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY . statline END_BODY

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 47
    var         go to state 48


State 33

    4 declaration: identifier COMMA declaration .

    $default  reduce using rule 4 (declaration)


State 34

    5 declaration: identifier COLON INTEGER .

    $default  reduce using rule 5 (declaration)


State 35

    6 declaration: identifier COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 49


State 36

   14 declarationparam: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 50


State 37

   17 statement: IF . boolexp THEN statline stathelp ENDIF

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 58
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 38

   18 statement: WHILE . boolexp BEGINLOOP statline ENDLOOP

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 67
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 39

   21 statement: READ . varline

    IDENT  shift, and go to state 5

    identifier  go to state 45
    varline     go to state 68
    var         go to state 69


State 40

   22 statement: WRITE . varline

    IDENT  shift, and go to state 5

    identifier  go to state 45
    varline     go to state 70
    var         go to state 69


State 41

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 42

   24 statement: RETURN . expression

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 72
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 43

   19 statement: DO . BEGINLOOP statline ENDLOOP WHILE boolexp

    BEGINLOOP  shift, and go to state 73


State 44

   20 statement: FOR . var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    IDENT  shift, and go to state 5

    identifier  go to state 45
    var         go to state 74


State 45

   60 var: identifier .
   61    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75

    $default  reduce using rule 60 (var)


State 46

   30 statline: statement . SEMICOLON statline

    SEMICOLON  shift, and go to state 76


State 47

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline . END_BODY

    END_BODY  shift, and go to state 77


State 48

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 78


State 49

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29

    number  go to state 79


State 50

   14 declarationparam: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 80


State 51

   35 relationexpr: NOT . relationhelper

    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    relationhelper     go to state 81
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 52

   38 relationhelper: TRUE .

    $default  reduce using rule 38 (relationhelper)


State 53

   39 relationhelper: FALSE .

    $default  reduce using rule 39 (relationhelper)


State 54

   40 relationhelper: L_PAREN . boolexp R_PAREN
   59 term1: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 82
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 83
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 55

   55 term: SUB . term1

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29

    number      go to state 56
    identifier  go to state 45
    term1       go to state 84
    var         go to state 66


State 56

   58 term1: number .

    $default  reduce using rule 58 (term1)


State 57

   56 term: identifier . L_PAREN expresscomm R_PAREN
   60 var: identifier .
   61    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 75
    L_PAREN           shift, and go to state 85

    $default  reduce using rule 60 (var)


State 58

   17 statement: IF boolexp . THEN statline stathelp ENDIF

    THEN  shift, and go to state 86


State 59

   31 boolexp: relationandexpr .
   32        | relationandexpr . OR boolexp

    OR  shift, and go to state 87

    $default  reduce using rule 31 (boolexp)


State 60

   33 relationandexpr: relationexpr .
   34                | relationexpr . AND relationandexpr

    AND  shift, and go to state 88

    $default  reduce using rule 33 (relationandexpr)


State 61

   36 relationexpr: relationhelper .

    $default  reduce using rule 36 (relationexpr)


State 62

   37 relationhelper: expression . comp expression
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90
    LTE  shift, and go to state 91
    GT   shift, and go to state 92
    LT   shift, and go to state 93
    GTE  shift, and go to state 94
    EQ   shift, and go to state 95
    NEQ  shift, and go to state 96

    comp  go to state 97


State 63

   47 expression: multiplicativeexp .
   51 multiplicativeexp: multiplicativeexp . MULT term
   52                  | multiplicativeexp . DIV term
   53                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 47 (expression)


State 64

   50 multiplicativeexp: term .

    $default  reduce using rule 50 (multiplicativeexp)


State 65

   54 term: term1 .

    $default  reduce using rule 54 (term)


State 66

   57 term1: var .

    $default  reduce using rule 57 (term1)


State 67

   18 statement: WHILE boolexp . BEGINLOOP statline ENDLOOP

    BEGINLOOP  shift, and go to state 101


State 68

   21 statement: READ varline .

    $default  reduce using rule 21 (statement)


State 69

   27 varline: var .
   28        | var . COMMA varline

    COMMA  shift, and go to state 102

    $default  reduce using rule 27 (varline)


State 70

   22 statement: WRITE varline .

    $default  reduce using rule 22 (statement)


State 71

   59 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 103
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 72

   24 statement: RETURN expression .
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 24 (statement)


State 73

   19 statement: DO BEGINLOOP . statline ENDLOOP WHILE boolexp

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 104
    var         go to state 48


State 74

   20 statement: FOR var . ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    ASSIGN  shift, and go to state 105


State 75

   61 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 106
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 76

   30 statline: statement SEMICOLON . statline

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 107
    var         go to state 48


State 77

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declparam END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY .

    $default  reduce using rule 3 (function)


State 78

   16 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 108
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 79

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 109


State 80

   14 declarationparam: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declarationparam)


State 81

   35 relationexpr: NOT relationhelper .

    $default  reduce using rule 35 (relationexpr)


State 82

   40 relationhelper: L_PAREN boolexp . R_PAREN

    R_PAREN  shift, and go to state 110


State 83

   37 relationhelper: expression . comp expression
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp
   59 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90
    LTE      shift, and go to state 91
    GT       shift, and go to state 92
    LT       shift, and go to state 93
    GTE      shift, and go to state 94
    EQ       shift, and go to state 95
    NEQ      shift, and go to state 96

    comp  go to state 97


State 84

   55 term: SUB term1 .

    $default  reduce using rule 55 (term)


State 85

   56 term: identifier L_PAREN . expresscomm R_PAREN

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 112
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66
    expresscomm        go to state 113


State 86

   17 statement: IF boolexp THEN . statline stathelp ENDIF

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 114
    var         go to state 48


State 87

   32 boolexp: relationandexpr OR . boolexp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 115
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 88

   34 relationandexpr: relationexpr AND . relationandexpr

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    relationandexpr    go to state 116
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 89

   48 expression: expression ADD . multiplicativeexp

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    multiplicativeexp  go to state 117
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 90

   49 expression: expression SUB . multiplicativeexp

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    multiplicativeexp  go to state 118
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 91

   45 comp: LTE .

    $default  reduce using rule 45 (comp)


State 92

   44 comp: GT .

    $default  reduce using rule 44 (comp)


State 93

   43 comp: LT .

    $default  reduce using rule 43 (comp)


State 94

   46 comp: GTE .

    $default  reduce using rule 46 (comp)


State 95

   41 comp: EQ .

    $default  reduce using rule 41 (comp)


State 96

   42 comp: NEQ .

    $default  reduce using rule 42 (comp)


State 97

   37 relationhelper: expression comp . expression

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 119
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 98

   51 multiplicativeexp: multiplicativeexp MULT . term

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number      go to state 56
    identifier  go to state 57
    term        go to state 120
    term1       go to state 65
    var         go to state 66


State 99

   52 multiplicativeexp: multiplicativeexp DIV . term

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number      go to state 56
    identifier  go to state 57
    term        go to state 121
    term1       go to state 65
    var         go to state 66


State 100

   53 multiplicativeexp: multiplicativeexp MOD . term

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number      go to state 56
    identifier  go to state 57
    term        go to state 122
    term1       go to state 65
    var         go to state 66


State 101

   18 statement: WHILE boolexp BEGINLOOP . statline ENDLOOP

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 123
    var         go to state 48


State 102

   28 varline: var COMMA . varline

    IDENT  shift, and go to state 5

    identifier  go to state 45
    varline     go to state 124
    var         go to state 69


State 103

   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp
   59 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 111
    ADD      shift, and go to state 89
    SUB      shift, and go to state 90


State 104

   19 statement: DO BEGINLOOP statline . ENDLOOP WHILE boolexp

    ENDLOOP  shift, and go to state 125


State 105

   20 statement: FOR var ASSIGN . number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    NUMBER  shift, and go to state 29

    number  go to state 126


State 106

   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp
   61 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127
    ADD               shift, and go to state 89
    SUB               shift, and go to state 90


State 107

   30 statline: statement SEMICOLON statline .

    $default  reduce using rule 30 (statline)


State 108

   16 statement: var ASSIGN expression .
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 16 (statement)


State 109

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 128


State 110

   40 relationhelper: L_PAREN boolexp R_PAREN .

    $default  reduce using rule 40 (relationhelper)


State 111

   59 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term1)


State 112

   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp
   62 expresscomm: expression .
   63            | expression . COMMA expresscomm

    COMMA  shift, and go to state 129
    ADD    shift, and go to state 89
    SUB    shift, and go to state 90

    $default  reduce using rule 62 (expresscomm)


State 113

   56 term: identifier L_PAREN expresscomm . R_PAREN

    R_PAREN  shift, and go to state 130


State 114

   17 statement: IF boolexp THEN statline . stathelp ENDIF

    ELSE  shift, and go to state 131

    $default  reduce using rule 25 (stathelp)

    stathelp  go to state 132


State 115

   32 boolexp: relationandexpr OR boolexp .

    $default  reduce using rule 32 (boolexp)


State 116

   34 relationandexpr: relationexpr AND relationandexpr .

    $default  reduce using rule 34 (relationandexpr)


State 117

   48 expression: expression ADD multiplicativeexp .
   51 multiplicativeexp: multiplicativeexp . MULT term
   52                  | multiplicativeexp . DIV term
   53                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 48 (expression)


State 118

   49 expression: expression SUB multiplicativeexp .
   51 multiplicativeexp: multiplicativeexp . MULT term
   52                  | multiplicativeexp . DIV term
   53                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 49 (expression)


State 119

   37 relationhelper: expression comp expression .
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 89
    SUB  shift, and go to state 90

    $default  reduce using rule 37 (relationhelper)


State 120

   51 multiplicativeexp: multiplicativeexp MULT term .

    $default  reduce using rule 51 (multiplicativeexp)


State 121

   52 multiplicativeexp: multiplicativeexp DIV term .

    $default  reduce using rule 52 (multiplicativeexp)


State 122

   53 multiplicativeexp: multiplicativeexp MOD term .

    $default  reduce using rule 53 (multiplicativeexp)


State 123

   18 statement: WHILE boolexp BEGINLOOP statline . ENDLOOP

    ENDLOOP  shift, and go to state 133


State 124

   28 varline: var COMMA varline .

    $default  reduce using rule 28 (varline)


State 125

   19 statement: DO BEGINLOOP statline ENDLOOP . WHILE boolexp

    WHILE  shift, and go to state 134


State 126

   20 statement: FOR var ASSIGN number . SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    SEMICOLON  shift, and go to state 135


State 127

   61 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


State 128

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 136


State 129

   63 expresscomm: expression COMMA . expresscomm

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 112
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66
    expresscomm        go to state 137


State 130

   56 term: identifier L_PAREN expresscomm R_PAREN .

    $default  reduce using rule 56 (term)


State 131

   26 stathelp: ELSE . statline

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 138
    var         go to state 48


State 132

   17 statement: IF boolexp THEN statline stathelp . ENDIF

    ENDIF  shift, and go to state 139


State 133

   18 statement: WHILE boolexp BEGINLOOP statline ENDLOOP .

    $default  reduce using rule 18 (statement)


State 134

   19 statement: DO BEGINLOOP statline ENDLOOP WHILE . boolexp

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 140
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 135

   20 statement: FOR var ASSIGN number SEMICOLON . boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    NOT      shift, and go to state 51
    TRUE     shift, and go to state 52
    FALSE    shift, and go to state 53
    L_PAREN  shift, and go to state 54
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    boolexp            go to state 141
    relationandexpr    go to state 59
    relationexpr       go to state 60
    relationhelper     go to state 61
    expression         go to state 62
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 136

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 137

   63 expresscomm: expression COMMA expresscomm .

    $default  reduce using rule 63 (expresscomm)


State 138

   26 stathelp: ELSE statline .

    $default  reduce using rule 26 (stathelp)


State 139

   17 statement: IF boolexp THEN statline stathelp ENDIF .

    $default  reduce using rule 17 (statement)


State 140

   19 statement: DO BEGINLOOP statline ENDLOOP WHILE boolexp .

    $default  reduce using rule 19 (statement)


State 141

   20 statement: FOR var ASSIGN number SEMICOLON boolexp . SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    SEMICOLON  shift, and go to state 142


State 142

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON . var ASSIGN expression BEGINLOOP statline ENDLOOP

    IDENT  shift, and go to state 5

    identifier  go to state 45
    var         go to state 143


State 143

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var . ASSIGN expression BEGINLOOP statline ENDLOOP

    ASSIGN  shift, and go to state 144


State 144

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN . expression BEGINLOOP statline ENDLOOP

    L_PAREN  shift, and go to state 71
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 29
    SUB      shift, and go to state 55

    number             go to state 56
    identifier         go to state 57
    expression         go to state 145
    multiplicativeexp  go to state 63
    term               go to state 64
    term1              go to state 65
    var                go to state 66


State 145

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression . BEGINLOOP statline ENDLOOP
   48 expression: expression . ADD multiplicativeexp
   49           | expression . SUB multiplicativeexp

    BEGINLOOP  shift, and go to state 146
    ADD        shift, and go to state 89
    SUB        shift, and go to state 90


State 146

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP . statline ENDLOOP

    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    CONTINUE  shift, and go to state 41
    RETURN    shift, and go to state 42
    DO        shift, and go to state 43
    FOR       shift, and go to state 44
    IDENT     shift, and go to state 5

    $default  reduce using rule 29 (statline)

    identifier  go to state 45
    statement   go to state 46
    statline    go to state 147
    var         go to state 48


State 147

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline . ENDLOOP

    ENDLOOP  shift, and go to state 148


State 148

   20 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP .

    $default  reduce using rule 20 (statement)
