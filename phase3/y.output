Grammar

    0 $accept: program $end

    1 program: %empty
    2        | function program

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    4 declaration: identifier COMMA declaration
    5            | identifier COLON INTEGER
    6            | identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    7 number: NUMBER

    8 decline: %empty
    9        | declaration SEMICOLON decline

   10 identifier: IDENT

   11 statement: var ASSIGN expression
   12          | IF boolexp THEN statline stathelp ENDIF
   13          | WHILE boolexp BEGINLOOP statline ENDLOOP
   14          | DO BEGINLOOP statline ENDLOOP WHILE boolexp
   15          | FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP
   16          | READ varline
   17          | WRITE varline
   18          | CONTINUE
   19          | RETURN expression

   20 stathelp: %empty
   21         | ELSE statline

   22 varline: var
   23        | var COMMA varline

   24 statline: %empty
   25         | statement SEMICOLON statline

   26 boolexp: relationandexpr
   27        | relationandexpr OR boolexp

   28 relationandexpr: relationexpr
   29                | relationexpr AND relationandexpr

   30 relationexpr: NOT relationhelper
   31             | relationhelper

   32 relationhelper: expression comp expression
   33               | TRUE
   34               | FALSE
   35               | L_PAREN boolexp R_PAREN

   36 comp: EQ
   37     | NEQ
   38     | LT
   39     | GT
   40     | LTE
   41     | GTE

   42 expression: multiplicativeexp
   43           | expression ADD multiplicativeexp
   44           | expression SUB multiplicativeexp

   45 multiplicativeexp: term
   46                  | multiplicativeexp MULT term
   47                  | multiplicativeexp DIV term
   48                  | multiplicativeexp MOD term

   49 term: term1
   50     | SUB term1
   51     | identifier L_PAREN expresscomm R_PAREN

   52 term1: var
   53      | number
   54      | L_PAREN expression R_PAREN

   55 var: identifier
   56    | identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   57 expresscomm: expression
   58            | expression COMMA expresscomm


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 3
BEGIN_PARAMS (259) 3
END_PARAMS (260) 3
BEGIN_LOCALS (261) 3
END_LOCALS (262) 3
BEGIN_BODY (263) 3
END_BODY (264) 3
INTEGER (265) 5 6
SEMICOLON (266) 3 9 15 25
COMMA (267) 4 23 58
COLON (268) 5 6
L_SQUARE_BRACKET (269) 6 56
R_SQUARE_BRACKET (270) 6 56
ARRAY (271) 6
OF (272) 6
ASSIGN (273) 11 15
IF (274) 12
THEN (275) 12
ELSE (276) 21
ENDIF (277) 12
WHILE (278) 13 14
BEGINLOOP (279) 13 14 15
ENDLOOP (280) 13 14 15
READ (281) 16
WRITE (282) 17
CONTINUE (283) 18
RETURN (284) 19
DO (285) 14
FOR (286) 15
OR (287) 27
AND (288) 29
NOT (289) 30
TRUE (290) 33
FALSE (291) 34
L_PAREN (292) 35 51 54
R_PAREN (293) 35 51 54
IDENT (294) 10
NUMBER (295) 7
ADD (296) 43
SUB (297) 44 50
MULT (298) 46
DIV (299) 47
MOD (300) 48
LTE (301) 40
GT (302) 39
LT (303) 38
GTE (304) 41
EQ (305) 36
NEQ (306) 37


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
program (53)
    on left: 1 2, on right: 0 2
function (54)
    on left: 3, on right: 2
declaration (55)
    on left: 4 5 6, on right: 4 9
number (56)
    on left: 7, on right: 6 15 53
decline (57)
    on left: 8 9, on right: 3 9
identifier (58)
    on left: 10, on right: 3 4 5 6 51 55 56
statement (59)
    on left: 11 12 13 14 15 16 17 18 19, on right: 25
stathelp (60)
    on left: 20 21, on right: 12
varline (61)
    on left: 22 23, on right: 16 17 23
statline (62)
    on left: 24 25, on right: 3 12 13 14 15 21 25
boolexp (63)
    on left: 26 27, on right: 12 13 14 15 27 35
relationandexpr (64)
    on left: 28 29, on right: 26 27 29
relationexpr (65)
    on left: 30 31, on right: 28 29
relationhelper (66)
    on left: 32 33 34 35, on right: 30 31
comp (67)
    on left: 36 37 38 39 40 41, on right: 32
expression (68)
    on left: 42 43 44, on right: 11 15 19 32 43 44 54 56 57 58
multiplicativeexp (69)
    on left: 45 46 47 48, on right: 42 43 44 46 47 48
term (70)
    on left: 49 50 51, on right: 45 46 47 48
term1 (71)
    on left: 52 53 54, on right: 49 50
var (72)
    on left: 55 56, on right: 11 15 22 23 52
expresscomm (73)
    on left: 57 58, on right: 51 58


State 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 2
    function  go to state 3


State 1

    3 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 4

    identifier  go to state 5


State 2

    0 $accept: program . $end

    $end  shift, and go to state 6


State 3

    2 program: function . program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 1 (program)

    program   go to state 7
    function  go to state 3


State 4

   10 identifier: IDENT .

    $default  reduce using rule 10 (identifier)


State 5

    3 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: program $end .

    $default  accept


State 7

    2 program: function program .

    $default  reduce using rule 2 (program)


State 8

    3 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 8 (decline)

    declaration  go to state 10
    decline      go to state 11
    identifier   go to state 12


State 10

    9 decline: declaration . SEMICOLON decline

    SEMICOLON  shift, and go to state 13


State 11

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline . END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    END_PARAMS  shift, and go to state 14


State 12

    4 declaration: identifier . COMMA declaration
    5            | identifier . COLON INTEGER
    6            | identifier . COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    COMMA  shift, and go to state 15
    COLON  shift, and go to state 16


State 13

    9 decline: declaration SEMICOLON . decline

    IDENT  shift, and go to state 4

    $default  reduce using rule 8 (decline)

    declaration  go to state 10
    decline      go to state 17
    identifier   go to state 12


State 14

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS . BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY

    BEGIN_LOCALS  shift, and go to state 18


State 15

    4 declaration: identifier COMMA . declaration

    IDENT  shift, and go to state 4

    declaration  go to state 19
    identifier   go to state 12


State 16

    5 declaration: identifier COLON . INTEGER
    6            | identifier COLON . ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

    9 decline: declaration SEMICOLON decline .

    $default  reduce using rule 9 (decline)


State 18

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS . decline END_LOCALS BEGIN_BODY statline END_BODY

    IDENT  shift, and go to state 4

    $default  reduce using rule 8 (decline)

    declaration  go to state 10
    decline      go to state 22
    identifier   go to state 12


State 19

    4 declaration: identifier COMMA declaration .

    $default  reduce using rule 4 (declaration)


State 20

    5 declaration: identifier COLON INTEGER .

    $default  reduce using rule 5 (declaration)


State 21

    6 declaration: identifier COLON ARRAY . L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 23


State 22

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline . END_LOCALS BEGIN_BODY statline END_BODY

    END_LOCALS  shift, and go to state 24


State 23

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET . number R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 25

    number  go to state 26


State 24

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS . BEGIN_BODY statline END_BODY

    BEGIN_BODY  shift, and go to state 27


State 25

    7 number: NUMBER .

    $default  reduce using rule 7 (number)


State 26

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY . statline END_BODY

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 39
    var         go to state 40


State 28

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 41


State 29

   12 statement: IF . boolexp THEN statline stathelp ENDIF

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 49
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 30

   13 statement: WHILE . boolexp BEGINLOOP statline ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 58
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 31

   16 statement: READ . varline

    IDENT  shift, and go to state 4

    identifier  go to state 37
    varline     go to state 59
    var         go to state 60


State 32

   17 statement: WRITE . varline

    IDENT  shift, and go to state 4

    identifier  go to state 37
    varline     go to state 61
    var         go to state 60


State 33

   18 statement: CONTINUE .

    $default  reduce using rule 18 (statement)


State 34

   19 statement: RETURN . expression

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 63
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 35

   14 statement: DO . BEGINLOOP statline ENDLOOP WHILE boolexp

    BEGINLOOP  shift, and go to state 64


State 36

   15 statement: FOR . var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    IDENT  shift, and go to state 4

    identifier  go to state 37
    var         go to state 65


State 37

   55 var: identifier .
   56    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 55 (var)


State 38

   25 statline: statement . SEMICOLON statline

    SEMICOLON  shift, and go to state 67


State 39

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline . END_BODY

    END_BODY  shift, and go to state 68


State 40

   11 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 41

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 70


State 42

   30 relationexpr: NOT . relationhelper

    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    relationhelper     go to state 71
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 43

   33 relationhelper: TRUE .

    $default  reduce using rule 33 (relationhelper)


State 44

   34 relationhelper: FALSE .

    $default  reduce using rule 34 (relationhelper)


State 45

   35 relationhelper: L_PAREN . boolexp R_PAREN
   54 term1: L_PAREN . expression R_PAREN

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 72
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 73
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 46

   50 term: SUB . term1

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25

    number      go to state 47
    identifier  go to state 37
    term1       go to state 74
    var         go to state 57


State 47

   53 term1: number .

    $default  reduce using rule 53 (term1)


State 48

   51 term: identifier . L_PAREN expresscomm R_PAREN
   55 var: identifier .
   56    | identifier . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66
    L_PAREN           shift, and go to state 75

    $default  reduce using rule 55 (var)


State 49

   12 statement: IF boolexp . THEN statline stathelp ENDIF

    THEN  shift, and go to state 76


State 50

   26 boolexp: relationandexpr .
   27        | relationandexpr . OR boolexp

    OR  shift, and go to state 77

    $default  reduce using rule 26 (boolexp)


State 51

   28 relationandexpr: relationexpr .
   29                | relationexpr . AND relationandexpr

    AND  shift, and go to state 78

    $default  reduce using rule 28 (relationandexpr)


State 52

   31 relationexpr: relationhelper .

    $default  reduce using rule 31 (relationexpr)


State 53

   32 relationhelper: expression . comp expression
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80
    LTE  shift, and go to state 81
    GT   shift, and go to state 82
    LT   shift, and go to state 83
    GTE  shift, and go to state 84
    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86

    comp  go to state 87


State 54

   42 expression: multiplicativeexp .
   46 multiplicativeexp: multiplicativeexp . MULT term
   47                  | multiplicativeexp . DIV term
   48                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 42 (expression)


State 55

   45 multiplicativeexp: term .

    $default  reduce using rule 45 (multiplicativeexp)


State 56

   49 term: term1 .

    $default  reduce using rule 49 (term)


State 57

   52 term1: var .

    $default  reduce using rule 52 (term1)


State 58

   13 statement: WHILE boolexp . BEGINLOOP statline ENDLOOP

    BEGINLOOP  shift, and go to state 91


State 59

   16 statement: READ varline .

    $default  reduce using rule 16 (statement)


State 60

   22 varline: var .
   23        | var . COMMA varline

    COMMA  shift, and go to state 92

    $default  reduce using rule 22 (varline)


State 61

   17 statement: WRITE varline .

    $default  reduce using rule 17 (statement)


State 62

   54 term1: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 93
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 63

   19 statement: RETURN expression .
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 19 (statement)


State 64

   14 statement: DO BEGINLOOP . statline ENDLOOP WHILE boolexp

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 94
    var         go to state 40


State 65

   15 statement: FOR var . ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    ASSIGN  shift, and go to state 95


State 66

   56 var: identifier L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 96
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 67

   25 statline: statement SEMICOLON . statline

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 97
    var         go to state 40


State 68

    3 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS decline END_PARAMS BEGIN_LOCALS decline END_LOCALS BEGIN_BODY statline END_BODY .

    $default  reduce using rule 3 (function)


State 69

   11 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 98
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 70

    6 declaration: identifier COLON ARRAY L_SQUARE_BRACKET number R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 6 (declaration)


State 71

   30 relationexpr: NOT relationhelper .

    $default  reduce using rule 30 (relationexpr)


State 72

   35 relationhelper: L_PAREN boolexp . R_PAREN

    R_PAREN  shift, and go to state 99


State 73

   32 relationhelper: expression . comp expression
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp
   54 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100
    ADD      shift, and go to state 79
    SUB      shift, and go to state 80
    LTE      shift, and go to state 81
    GT       shift, and go to state 82
    LT       shift, and go to state 83
    GTE      shift, and go to state 84
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86

    comp  go to state 87


State 74

   50 term: SUB term1 .

    $default  reduce using rule 50 (term)


State 75

   51 term: identifier L_PAREN . expresscomm R_PAREN

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 101
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57
    expresscomm        go to state 102


State 76

   12 statement: IF boolexp THEN . statline stathelp ENDIF

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 103
    var         go to state 40


State 77

   27 boolexp: relationandexpr OR . boolexp

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 104
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 78

   29 relationandexpr: relationexpr AND . relationandexpr

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    relationandexpr    go to state 105
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 79

   43 expression: expression ADD . multiplicativeexp

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    multiplicativeexp  go to state 106
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 80

   44 expression: expression SUB . multiplicativeexp

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    multiplicativeexp  go to state 107
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 81

   40 comp: LTE .

    $default  reduce using rule 40 (comp)


State 82

   39 comp: GT .

    $default  reduce using rule 39 (comp)


State 83

   38 comp: LT .

    $default  reduce using rule 38 (comp)


State 84

   41 comp: GTE .

    $default  reduce using rule 41 (comp)


State 85

   36 comp: EQ .

    $default  reduce using rule 36 (comp)


State 86

   37 comp: NEQ .

    $default  reduce using rule 37 (comp)


State 87

   32 relationhelper: expression comp . expression

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 108
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 88

   46 multiplicativeexp: multiplicativeexp MULT . term

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number      go to state 47
    identifier  go to state 48
    term        go to state 109
    term1       go to state 56
    var         go to state 57


State 89

   47 multiplicativeexp: multiplicativeexp DIV . term

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number      go to state 47
    identifier  go to state 48
    term        go to state 110
    term1       go to state 56
    var         go to state 57


State 90

   48 multiplicativeexp: multiplicativeexp MOD . term

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number      go to state 47
    identifier  go to state 48
    term        go to state 111
    term1       go to state 56
    var         go to state 57


State 91

   13 statement: WHILE boolexp BEGINLOOP . statline ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 112
    var         go to state 40


State 92

   23 varline: var COMMA . varline

    IDENT  shift, and go to state 4

    identifier  go to state 37
    varline     go to state 113
    var         go to state 60


State 93

   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp
   54 term1: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 100
    ADD      shift, and go to state 79
    SUB      shift, and go to state 80


State 94

   14 statement: DO BEGINLOOP statline . ENDLOOP WHILE boolexp

    ENDLOOP  shift, and go to state 114


State 95

   15 statement: FOR var ASSIGN . number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    NUMBER  shift, and go to state 25

    number  go to state 115


State 96

   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp
   56 var: identifier L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116
    ADD               shift, and go to state 79
    SUB               shift, and go to state 80


State 97

   25 statline: statement SEMICOLON statline .

    $default  reduce using rule 25 (statline)


State 98

   11 statement: var ASSIGN expression .
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 11 (statement)


State 99

   35 relationhelper: L_PAREN boolexp R_PAREN .

    $default  reduce using rule 35 (relationhelper)


State 100

   54 term1: L_PAREN expression R_PAREN .

    $default  reduce using rule 54 (term1)


State 101

   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp
   57 expresscomm: expression .
   58            | expression . COMMA expresscomm

    COMMA  shift, and go to state 117
    ADD    shift, and go to state 79
    SUB    shift, and go to state 80

    $default  reduce using rule 57 (expresscomm)


State 102

   51 term: identifier L_PAREN expresscomm . R_PAREN

    R_PAREN  shift, and go to state 118


State 103

   12 statement: IF boolexp THEN statline . stathelp ENDIF

    ELSE  shift, and go to state 119

    $default  reduce using rule 20 (stathelp)

    stathelp  go to state 120


State 104

   27 boolexp: relationandexpr OR boolexp .

    $default  reduce using rule 27 (boolexp)


State 105

   29 relationandexpr: relationexpr AND relationandexpr .

    $default  reduce using rule 29 (relationandexpr)


State 106

   43 expression: expression ADD multiplicativeexp .
   46 multiplicativeexp: multiplicativeexp . MULT term
   47                  | multiplicativeexp . DIV term
   48                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 43 (expression)


State 107

   44 expression: expression SUB multiplicativeexp .
   46 multiplicativeexp: multiplicativeexp . MULT term
   47                  | multiplicativeexp . DIV term
   48                  | multiplicativeexp . MOD term

    MULT  shift, and go to state 88
    DIV   shift, and go to state 89
    MOD   shift, and go to state 90

    $default  reduce using rule 44 (expression)


State 108

   32 relationhelper: expression comp expression .
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp

    ADD  shift, and go to state 79
    SUB  shift, and go to state 80

    $default  reduce using rule 32 (relationhelper)


State 109

   46 multiplicativeexp: multiplicativeexp MULT term .

    $default  reduce using rule 46 (multiplicativeexp)


State 110

   47 multiplicativeexp: multiplicativeexp DIV term .

    $default  reduce using rule 47 (multiplicativeexp)


State 111

   48 multiplicativeexp: multiplicativeexp MOD term .

    $default  reduce using rule 48 (multiplicativeexp)


State 112

   13 statement: WHILE boolexp BEGINLOOP statline . ENDLOOP

    ENDLOOP  shift, and go to state 121


State 113

   23 varline: var COMMA varline .

    $default  reduce using rule 23 (varline)


State 114

   14 statement: DO BEGINLOOP statline ENDLOOP . WHILE boolexp

    WHILE  shift, and go to state 122


State 115

   15 statement: FOR var ASSIGN number . SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    SEMICOLON  shift, and go to state 123


State 116

   56 var: identifier L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 56 (var)


State 117

   58 expresscomm: expression COMMA . expresscomm

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 101
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57
    expresscomm        go to state 124


State 118

   51 term: identifier L_PAREN expresscomm R_PAREN .

    $default  reduce using rule 51 (term)


State 119

   21 stathelp: ELSE . statline

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 125
    var         go to state 40


State 120

   12 statement: IF boolexp THEN statline stathelp . ENDIF

    ENDIF  shift, and go to state 126


State 121

   13 statement: WHILE boolexp BEGINLOOP statline ENDLOOP .

    $default  reduce using rule 13 (statement)


State 122

   14 statement: DO BEGINLOOP statline ENDLOOP WHILE . boolexp

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 127
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 123

   15 statement: FOR var ASSIGN number SEMICOLON . boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    NOT      shift, and go to state 42
    TRUE     shift, and go to state 43
    FALSE    shift, and go to state 44
    L_PAREN  shift, and go to state 45
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    boolexp            go to state 128
    relationandexpr    go to state 50
    relationexpr       go to state 51
    relationhelper     go to state 52
    expression         go to state 53
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 124

   58 expresscomm: expression COMMA expresscomm .

    $default  reduce using rule 58 (expresscomm)


State 125

   21 stathelp: ELSE statline .

    $default  reduce using rule 21 (stathelp)


State 126

   12 statement: IF boolexp THEN statline stathelp ENDIF .

    $default  reduce using rule 12 (statement)


State 127

   14 statement: DO BEGINLOOP statline ENDLOOP WHILE boolexp .

    $default  reduce using rule 14 (statement)


State 128

   15 statement: FOR var ASSIGN number SEMICOLON boolexp . SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP

    SEMICOLON  shift, and go to state 129


State 129

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON . var ASSIGN expression BEGINLOOP statline ENDLOOP

    IDENT  shift, and go to state 4

    identifier  go to state 37
    var         go to state 130


State 130

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var . ASSIGN expression BEGINLOOP statline ENDLOOP

    ASSIGN  shift, and go to state 131


State 131

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN . expression BEGINLOOP statline ENDLOOP

    L_PAREN  shift, and go to state 62
    IDENT    shift, and go to state 4
    NUMBER   shift, and go to state 25
    SUB      shift, and go to state 46

    number             go to state 47
    identifier         go to state 48
    expression         go to state 132
    multiplicativeexp  go to state 54
    term               go to state 55
    term1              go to state 56
    var                go to state 57


State 132

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression . BEGINLOOP statline ENDLOOP
   43 expression: expression . ADD multiplicativeexp
   44           | expression . SUB multiplicativeexp

    BEGINLOOP  shift, and go to state 133
    ADD        shift, and go to state 79
    SUB        shift, and go to state 80


State 133

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP . statline ENDLOOP

    IF        shift, and go to state 29
    WHILE     shift, and go to state 30
    READ      shift, and go to state 31
    WRITE     shift, and go to state 32
    CONTINUE  shift, and go to state 33
    RETURN    shift, and go to state 34
    DO        shift, and go to state 35
    FOR       shift, and go to state 36
    IDENT     shift, and go to state 4

    $default  reduce using rule 24 (statline)

    identifier  go to state 37
    statement   go to state 38
    statline    go to state 134
    var         go to state 40


State 134

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 135

   15 statement: FOR var ASSIGN number SEMICOLON boolexp SEMICOLON var ASSIGN expression BEGINLOOP statline ENDLOOP .

    $default  reduce using rule 15 (statement)
